{
  "name": "Final work",
  "nodes": [
    {
      "parameters": {
        "formTitle": "ROI form",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Device Model",
              "placeholder": "e.g Iphone 13",
              "requiredField": true
            },
            {
              "fieldLabel": "Defects",
              "placeholder": "e.g \"Broken screen\"",
              "requiredField": true
            },
            {
              "fieldLabel": "Device price",
              "fieldType": "number",
              "placeholder": "e.g 100$",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -2336,
        -768
      ],
      "id": "9766e4ab-5c6d-429d-8548-5c825813ae69",
      "name": "On form submission",
      "webhookId": "e201d055-fd2c-42fa-9f93-6e1d2ba7c616"
    },
    {
      "parameters": {
        "url": "=https://api.ebay.com/buy/browse/v1/item_summary/search?q=refurbished {{ $('On form submission').item.json['Device Model'] }} &limit=1",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.accesstoken }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1920,
        -768
      ],
      "id": "9de808e6-51bd-4fb8-8767-870db128282b",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "const clientId = 'YOUR-CLIENT-ID';\nconst clientSecret ='YOUR CLIENT SECRET';\nconst basicAuth = Buffer.from(`${clientId}:${clientSecret}`).toString('base64');\n\nconst options = {\n  method: 'POST',\n  url: 'https://api.ebay.com/identity/v1/oauth2/token',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Authorization': `Basic ${basicAuth}`,\n  },\n  body: 'grant_type=client_credentials&scope=https://api.ebay.com/oauth/api_scope',\n  json: false // VERY IMPORTANT: body is raw string, so don't auto-parse it\n};\n\n  const staticGlobalData=$getWorkflowStaticData('global')\n  const expiry=staticGlobalData.expiry\nconst presenttime=new Date()\nconsole.log(staticGlobalData.tokenexpiry)\nif(staticGlobalData.tokenexpiry&&presenttime<new Date(staticGlobalData.tokenexpiry)){\n  return [{json:{accessToken:staticGlobalData.accesstoken,message:\"everythinggood\"}}]\n}\n\n\ntry {\n  const response = await this.helpers.httpRequest(options);\n \n\n\nconst accesstoken=response.access_token;\nconst tokenExpiry=response.expires_in;\nconst tokenRealExpiry=new Date(Date.now()+(tokenExpiry*1000))\nstaticGlobalData.accesstoken=accesstoken\nstaticGlobalData.tokenexpiry=tokenRealExpiry.toISOString() \n  return [{json:{accesstoken:response.access_token}}]; \n  \n} catch (error) {\n  \n  return [{erro:error}]\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2080,
        -768
      ],
      "id": "c2a9e7d3-3ef8-41d0-924f-8a7a6fa9a759",
      "name": "Code1"
    },
    {
      "parameters": {
        "jsCode": "const response=$input.first()\nreturn [{json:{Refurbishedprice:response.json.itemSummaries[0].price.value}}]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1728,
        -768
      ],
      "id": "ae23b109-238f-419c-ace3-ef466cc77885",
      "name": "Code"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Device model:{{ $('On form submission').item.json['Device Model'] }}\nDefects:{{ $('On form submission').item.json.Defects }}\nTavilyRespone:{{ $json.answer }}",
        "options": {
          "systemMessage": "You are a real-time search agent tasked with finding the current market price of used or broken electronic devices that have specific defects or damage conditions.\n\nYou are provided with a market search result that has already been retrieved using the Tavily tool, which searched across trusted marketplaces (such as eBay, Swappa, BackMarket, Amazon Renewed) to locate listings or sold prices for devices matching the condition and defects described.\n\n🔍 Objective:\nGiven:\n\nDevice model (e.g., \"iPhone 12 Pro\", \"Samsung Galaxy S21\")\n\nList of defects (e.g., \"cracked screen\", \"water damage\")\n\nYou must:\n\nRead the provided Tavily market response\n\nIdentify recent listings (preferably from the last 7–30 days) with similar defect conditions\n\nFocus on sold prices or active listings\n\nExtract the most common/average price in USD\n\n⚠️ Output Instruction:\nOnly return the estimated market price (in USD), nothing else.\n\nFormat:\n\nini\nprice = $[amount]\n\n✅ Example Output:\n\nini\nprice = $130\n\nDo not include:\n\nExplanations\n\nLinks\n\nConfidence scores\n\nSummaries\n\nSuggestions\n\nJust the price. Be concise and consistent.\n\n📦 Market data to analyze:\n\"{ {$json[\"tavily_response\"]} }\"\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -1200,
        -768
      ],
      "id": "edd68096-8e73-4424-80d9-d83800da5b08",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -960,
        -448
      ],
      "id": "ef767fa0-bdc0-4eef-8ded-e79e7e3d3d1a",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "izqDXyX5Y5UOw2q6",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Device Model:{{ $('On form submission').item.json['Device Model'] }}\nDefects:{{ $('On form submission').item.json.Defects }}",
        "options": {
          "systemMessage": "For the device model, infer the specific replacement parts required to repair the following defects:\n\ncracked screen\n\nbattery draining fast\n\nwon’t charge\n\nblurry photos\n\nno sound during call\n\nReturn the result as a JSON array of objects in the following format:\n\n\n[\n  { \"part\": \"device model with part-name-1\" },\n  { \"part\": \"device model with part-name-2\" },\n  ...\n]\nDo not include duplicates or explanations. Only return the JSON."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        -784,
        -768
      ],
      "id": "ac4f1059-222e-4838-99e0-5edfa2d9e61a",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "jsCode": "const data=$input.first().json.output\nconst raw = data.replace(/```json|```/g, '').trim();\nconst parts = JSON.parse(raw)\n\nreturn parts?.map(item => ({ json: item }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -304,
        -784
      ],
      "id": "1788c95b-6b6d-4727-a2d0-6168d94d54ea",
      "name": "Code2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -416,
        -256
      ],
      "id": "c954f219-87ea-4f41-9ef2-6d79b68a433d",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR-BEARER-TOKEN"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"Current price of  {{ $json.part }} in USD \",\n  \"auto_parameters\": false,\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 1,\n  \"time_range\": \"year\",\n  \"days\": 7,\n  \"include_answer\": true,\n  \"include_raw_content\": true,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_favicon\": false,\n  \"include_domains\": [\"ifixit.com\",\n    \"ebay.com\",\n    \"aliexpress.com\",\"idoctoruk.com\"],\n  \"exclude_domains\": [ \"reddit.com\",\n  \"quora.com\",\n  \"medium.com\",\n  \"tumblr.com\",\n  \"stackexchange.com\",\n  \"stackoverflow.com\",\n  \"twitter.com\",\n  \"facebook.com\",\"amazon.com\"],\n  \"country\": null\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        16,
        -224
      ],
      "id": "4fd7bfa9-b7ec-456a-a4a5-e6dd1b30400b",
      "name": "HTTP Request2"
    },
    {
      "parameters": {
        "jsCode": "const allAnswers = $input.all().map(item => item.json.answer);\nconst combinedText = allAnswers.join(\"\\n\\n\");\n\nreturn [\n  {\n    json: {\n      combinedAnswers: combinedText\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        -416
      ],
      "id": "9f97bc1a-23cc-48d4-b30d-a20fa86027d8",
      "name": "Code3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a037a1b7-4674-4c53-ab30-a481429fd3c3",
              "leftValue": "={{ $json.answer }}",
              "rightValue": "not available",
              "operator": {
                "type": "string",
                "operation": "contains"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        272,
        -224
      ],
      "id": "99e79928-8b73-4095-a413-7791c67dcc2e",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR-BEARER-TOKEN"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\": \"Current price of {{ $json.part }} \",\n  \"auto_parameters\": false,\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 1,\n  \"time_range\": null,\n  \"days\": 7,\n  \"include_answer\": true,\n  \"include_raw_content\": true,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_favicon\": false,\n  \"include_domains\": [\"ifixit.com\",\n    \"ebay.com\",\n    \"aliexpress.com\",\n    \"swappa.com\"],\n  \"exclude_domains\": [ \"reddit.com\",\n  \"quora.com\",\n  \"medium.com\",\n  \"tumblr.com\",\n  \"stackexchange.com\",\n  \"stackoverflow.com\",\n  \"twitter.com\",\n  \"facebook.com\",\"amazon.com\"],\n  \"country\": null\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        224,
        192
      ],
      "id": "f46e4e44-e1a1-4cf8-9a6e-b3197508129d",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=partscost:{{ $json.combinedAnswers }}\nproductcost: {{ $('On form submission').first().json['Device price'] }}\nrefurbishedprice: {{ $('Code').first().json.Refurbishedprice }}\nusedprice: {{ $('AI Agent').first().json.output }}",
        "options": {
          "systemMessage": "Extract the following values from the text:\n\n- Product cost\n- Part cost\n- Refurbished price\n- Used price\n\nReturn only a JSON object in the following format:\n{\n  \"product_cost\": \"...\",\n  \"part_cost\": \"...\",\n  \"refurbished_price\": \"...\",\n  \"used_price\": \"...\"\n}\nYou can also include a sample like:\n\ntxt\nCopy\nEdit\nExample Output:\n{\n  \"product_cost\": \"100$\",\n  \"part_cost\": \"200$\",\n  \"refurbished_price\": \"300$\",\n  \"used_price\": \"200$\"\n}\nEnsure:\n- part_cost is the **sum** of all listed part prices.\n- Do **not** include any explanation or extra text — only return valid JSON.\n- All prices should include the \"$\" symbol."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        336,
        -432
      ],
      "id": "a3bc06b1-9279-44b8-96c4-1d1dd9be82d1",
      "name": "AI Agent2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        496,
        -240
      ],
      "id": "102f767c-5dcd-4c1e-8610-2aa0d40121d3",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "izqDXyX5Y5UOw2q6",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const data=$input.first().json.output\nconst raw = data.replace(/```json|```/g, '').trim();\nconst obj = JSON.parse(raw);\nreturn [{ json: obj }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        704,
        -448
      ],
      "id": "846118cd-09de-4427-b562-74bbffa4bae8",
      "name": "Code4"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.1.7:3000/api/roiSummary",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "cost_price",
              "value": "={{ $json.product_cost }}"
            },
            {
              "name": "refurbished_price",
              "value": "={{ $json.refurbished_price }}"
            },
            {
              "name": "parts_cost",
              "value": "={{ $json.part_cost }}"
            },
            {
              "name": "used_price",
              "value": "={{ $json.used_price }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        912,
        -448
      ],
      "id": "6950aa29-d23e-4faa-a2e9-197f87885450",
      "name": "HTTP Request3"
    },
    {
      "parameters": {
        "sendTo": "RECIPIENT-EMAIL-ADDRESS",
        "subject": "ROI summary",
        "message": "={{ $json.summary }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1136,
        -448
      ],
      "id": "6ccb1f36-866d-463b-b5b9-c992ce33ae2e",
      "name": "Send a message",
      "webhookId": "9e345f7d-9bf9-454a-91bd-b45db2386db6",
      "credentials": {
        "gmailOAuth2": {
          "id": "EILzXOInzPxhI0En",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const markdown =  $input.first().json.summary\n\nconst { marked } = require(\"marked\"); // built-in in n8n\n\nreturn [\n  {\n    json: {\n      html: marked.parse(markdown)\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        688,
        -848
      ],
      "id": "e2791428-c45a-4923-b371-164ce2462d8f",
      "name": "Code5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.tavily.com/search",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR-BEARER-TOKEN"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"query\": \"{{ $('On form submission').item.json['Device Model'] }} with {{ $('On form submission').item.json.Defects }} price in USD\",\n  \"auto_parameters\": false,\n  \"topic\": \"general\",\n  \"search_depth\": \"basic\",\n  \"chunks_per_source\": 3,\n  \"max_results\": 1,\n  \"time_range\": null,\n  \"days\": 7,\n  \"include_answer\": true,\n  \"include_raw_content\": true,\n  \"include_images\": false,\n  \"include_image_descriptions\": false,\n  \"include_favicon\": false,\n  \"include_domains\": [\"bankmycell.com\"],\n  \"exclude_domains\": [],\n  \"country\": null\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1504,
        -768
      ],
      "id": "1733817b-6838-4bfb-beac-11a50cd7fb2d",
      "name": "HTTP Request4"
    }
  ],
  "pinData": {},
  "connections": {
    "On form submission": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request2": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "HTTP Request3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request3": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "55323dbb-ff77-4d9b-b417-bf550dfe8a6a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9ec4e12ebac723024754d7466390c588072434983bb59ee206a6ffe821ba7195"
  },
  "id": "NwplgDJlsH7wf58f",
  "tags": []
}